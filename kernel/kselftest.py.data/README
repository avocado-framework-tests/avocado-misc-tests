This program runs the selftest available with the linux kernel source.
Compile and run the tests available at /tools/testing/selftests

KSM Test Documentation :-

  Supported <test type>:
  -M (page merging)
  -Z (zero pages merging)
  -N (merging of pages in different NUMA nodes)
  -U (page unmerging)
  -C evaluate the time required to break COW of merged pages.
  -P evaluate merging time and speed.
     For this test, the size of duplicated memory area (in MiB) must be
     provided using -s option.
  -H evaluate merging time and speed of area allocated mostly with huge
     pages. For this test, the size of duplicated memory area(in MiB)
     must be provided using -s option

kernel/kselftest.py.data/ksmtest.yaml contains YAML parameters that can
be used to control ksm_tests behaviour. The following parameters are to
be added under mm component. 
1. subtest     -> To specify ksm_tests
2. test_type   -> Kself supported test types.
3. Size        -> Size of duplicated memory area(in MiB) must be provided using -s option.
4. Dup_MM_Area -> Size of duplicated memory area (in MiB).

To run ksm_tests with -P and -H test types, following section can be added to
the YAML file
    mm:
        comp: "mm"
        subtest: "ksm_tests"
        test_type: "-H"
        Size: "-s"
        Dup_MM_Area: "100"
Note: The value of Dup_MM_Area depends on the use case.

To run with  -M, -Z, -N, -U and -C test types, there is no need to pass the
"Size" and "Dup_MM_Area" parameters.
Example YAML section:
    mm:
        comp: "mm"
        subtest: "ksm_tests"
        test_type: "-M"
        Size: ""
        Dup_MM_Area: ""

Following are few sample YAML inputs that can be used to control KSM and
other kselftests

To run only ksm_tests with upstream code:

component: !mux
    mm:
        comp: "mm"
        subtest: "ksm_tests"
        test_type: "-H"
        Size: "-s"
        Dup_MM_Area: "100"
run_type: !mux
    upstream:
        type: 'upstream'
        location: "https://github.com/torvalds/linux/archive/master.zip"

To run only a subset of powerpc specific selftests (alignment):

component: !mux
    power:
        comp: "powerpc"
        subtest: 'alignment'
        kself_args: "summary=1"
run_type: !mux
    upstream:
        type: 'upstream'
        location: "https://github.com/torvalds/linux/archive/master.zip"

To run both ksm_tests and alignment powerpc selftest:

component: !mux
    power:
        comp: "powerpc"
        subtest: "alignment"
        kself_args: "summary=1"
    mm:
        comp: "mm"
        subtest: "ksm_tests"
        test_type: "-H"
        Size: "-s"
        Dup_MM_Area: "100"
run_type: !mux
    upstream:
        type: 'upstream'
        location: "https://github.com/torvalds/linux/archive/master.zip"

To run entire powerpc specific selftests and ksm_tests:

component: !mux
    power:
        comp: "powerpc"
        kself_args: "summary=1"
    mm:
        comp: "mm"
        subtest: "ksm_tests"
        test_type: "-H"
        Size: "-s"
        Dup_MM_Area: "100"
run_type: !mux
    upstream:
        type: 'upstream'
        location: "https://github.com/torvalds/linux/archive/master.zip"

